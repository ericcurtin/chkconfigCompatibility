#!/usr/bin/perl
#
# Converts chkconfig commands to their systemd equivalents
#
use strict;
use warnings;
use v5.10.0;
use Getopt::Long qw{:config no_ignore_case bundling};
use Pod::Usage;

my $opts;
GetOptions($opts,
           "add|a",
           "help|h",
           "list|l"
    ) or pod2usage(-verbose => 0,
                   -exitval => 22,  # 22 = EINVAL Invalid argument
                   -message => "*** Invalid option or bad syntax");
if ($opts->{help}) {
    pod2usage(0);
}
#>>>

my $daemon = $ARGV[0] || '';
my $cmd = $ARGV[1] || '';

if ($opts->{add}) {
    exit system('systemctl daemon-reload');
}
elsif ($opts->{list}) {
    # Difference between chkconfig and systemctl, chkconfig returns 1 if it
    # can't find the service, this mimics it's behaviour for this chkconfig
    # compatibility script, if systemctl outputs nothing or
    # '0 unit files listed', the service does not exist.
    my $output = `systemctl list-unit-files --type=service $daemon.service`;
    printf("$output");
    exit 1 if ($output =~ '0 unit files listed' || !$output);
    exit 0;
}
elsif ($cmd eq 'on') {
    exit system("systemctl enable $daemon");
}
elsif ($cmd eq 'off') {
    exit system("systemctl disable $daemon");
}
elsif ($cmd) {
    exit system("systemctl $cmd $daemon");
}
exit system("systemctl is-enabled $daemon");

__END__

=head1 NAME

 chkconfig - Converts chkconfig commands to their systemd equivalents

=head1 SYNOPSIS

 chkconfig [options]

 Options:
  -a --add  Used when you create a new service file or modify any
            configuration
  -h --help Show this help
  -l --list Print a table of services that lists which runlevels each is
            configured on or off

=cut
